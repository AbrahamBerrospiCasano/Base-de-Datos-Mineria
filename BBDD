
Overleaf Latex: https://www.overleaf.com/project/5f50050fd7758d0001a08643
Powert Point: ...

/////
Codigo para crear la base de Datos:

create database mina;

Codigo para crear las tablas:

Create table Cliente (
	Cliente_ID int,
	Nombre varchar(30),
	Teléfono varchar(30),
	primary key(Cliente_ID)
	);

Create table ClienteProducto (
	Cliente_ID references Cliente(Cliente_ID),
	Producto_ID references Producto(Producto_ID)
	);

Create table Producto (
	Producto_ID int,
	Nombre varchar(30),
	Primary key(Producto_ID)
	);

Create table ProductoOperacion(
	Producto_ID references Producto(Producto_ID),
	Operacion_ID references Operacion(Operacion_ID)
	);

Create table Operacion (
	Operacion_ID varchar(30),
	Nombre varchar(30),
	Fecha varchar(30),
	Altitud varchar(30),
	Ubicación varchar(30),
	primary key(Operacion_ID)
	);

Create table OperacionConflicto (
	Operacion_ID references Operacion(Operacion_ID)
	Conficto_ID references ConflictoSocial(Conflicto_ID)
	);
	
Create table ConflictoSocial (
	Conficto_ID int,
	Ubicacion references Operacion(Ubicacion);
	Situacion varchar(30)
	primary key(Conflicto_ID)
	);
	
Create table OperacionMaquinaria (
	Operacion_ID references Operacion(Operacion_ID),
	Maquinaria_ID references Maquinaria(Maquinaria_ID)
	);

create table Maquinaria (
	Maquinaria_ID int,
	Modelo varchar(30),
	Nombre varchar(30),
	Marca varchar(30),
	Cantidad varchar(30),
	primary key(Maquinaria_ID)
	);	
	
Create table OperacionProyecto (
	Operacion_ID references Operacion(Operacion_ID),
	Proyecto_ID references Proyecto(Proyecto_ID)
	);
	
Create table Proyecto (
	Proyecto_ID int,
	Altitud varchar(30),
	Ubicacion varchar(30),
	Nombre varchar(30),
	primary key(Proyecto_ID)
	);	
	
Create table OperacionEmpleado (
	Operacion_ID references Operacion(Operacion_ID),
	Empleado_ID references Empleado(Empleado_ID)
	);

Create table Empleado (
	Empleado_ID int,
	Nombre varchar(30),
	Dirección varchar(30),
	Carga varchar(30),
	Teléfono varchar(30),
	Salario varchar(30),
	primary key(Empleado_ID)
	);
    
Create table Supervisa (
	Supervisor_ID int, 
	Empleado_ID references Empleado(Empleado_ID) 
	);
	
Create table EmpleadoProyecto (
	Empleado_ID references Empleado(Empleado_ID),
	Proyecto_ID references Proyecto(Proyecto_ID)
	);
	
Create table EmpleadoMaquinaria (
	Empleado_ID references Empleado(Empleado_ID),
	Maquinaria_ID references Maquinaria(Maquinaria_ID),
	);
	
Create table MaquinariaProveedor (
	Maquinaria_ID references Maquinaria(Maquinaria_ID),
	RUC references Proveedor(RUC)
	);

Create table Proveedor (
	RUC varchar(30),
	Nombre varchar(30),
	Teléfono varchar(30),
	Email varchar(30),
	primary key(RUC) 
	);

	
	
Codigo SQL para ingresar datos a las tablas:


Insert Into cliente(cliente_id,nombre,teléfono) values(i,'c','c');

Insert Into clienteoperacion(cliente_id,producto_id) values(i,i);

Insert Into producto(producto_id,nombre) values(i,'c');

Insert Into productooperacion(producto_id,operacion_id) values();

Insert Into operación(operacion_id,nombre,fecha,altitud,ubicación) values(i,'c''c''c''c');

Insert Into operacionconflicto(operacion_id,conflicto_id) values(i,i);

Insert Into conflictosocial(conflicto_id,ubicacion,situacion) values(i,'c','c');

Insert Into operacionmaquinaria(operacion_id,maquinaria_id) values(i,i);

Insert Into maquinaria(maquinaria_id,modelo,nombre,marca,cantidad) values(i,'c','c','c','c');

Insert Into opionproyecto(operacion_id,proyecto_id) values(i,i);

Insert Into proyecto(altitud,ubicación,nombre,cliente_id), values('c','c','c',i);

Insert Into operacionempleado(operacion_id,empleado_id) values(i,i);

Insert Into empleado(empleado_id,nombre,dirección,carga,teléfono,salario,) values(i,'c','c','c','c','c');

Insert Into supervisa(supervisor_id,empleado_id) values(i,i);

Insert Into empleadoproyecto(empleado_id,proyecto_id) values(i,i);

Insert Into empleadomaquinaria(empleado_id,maquinaria_id) values(i,i);

Insert Into maquinariaproveedor(maquinaria_id,ruc) values(i,'c');

Insert Into proveedor(ruc,nombre,telefono,email) values('c','c','c','c');


Codigo para hacer consultas:
-Selección:
	Buscar los datos de los empleados con salario entre 3000 y 5000.
	Select * from empleado where salario between 3000 y 5000;
-Proyección:
	Buscar los nombre de los proveedores.
	Select "nombre-proveedor" from proveedor;
-Unión:
	Buscar los nombres de los clientes y de los proveedores.
	Select "nombre-cliente" from cliente union select "nombre-proveedor" from proveedor
-Intersección:
	Buscar los numeros de las facturas de los clientes y la factura. 
	Select "numero-factura" from cliente INTERSECT SELECT "numero-factura" from factura;
-Diferecia: 
	Buscar el id del mineral que no produce los proyectos pero si las operaciones.
	Select "id-mineral" from operaciones EXCEPT SELECT "id-mineral" from proyectos;
	
	
	2.select "nombre" from pescadores union select "calificacion" from pescadores intersect select "nombre"=triton from embarcaciones
	
	3. Select "pid" from pescadores union select "color" rojo from embarcaciones union SELECT "color"=azul from proyectos;
	
	4.Select "pid" from pescadores union select "color"=rojo from embarcaciones EXCEPT SELECT "color"=azul from proyectos;
	
	4.Select "eid" from pescadores union select "color"=rojo from embarcaciones EXCEPT SELECT "color"=azul from proyectos;
	
	select * from pescadores;
	select * from reservas;
	select * from embarcaciones;
	
	
	
-División:
-Producto Cartesiano:
	Buscar los datos de los clientes que efectúan las facturas.
	Select * from cliente CROSS JOIN factura WHERE cliente."numero-factura"=factura."numero-factura";
-Join Left:
	Buscar los datos de los proyectos y aquellos productos que se muestan en proyectos.
	Select * from proyectos LEFT OUTER JOIN producto ON "id-mineral"="id-producto";
-Join Right:
	Buscar los datos de los productos y aquellas operaciones que se producen los minerales.
	Select * from operaciones RIGHT OUTER JOIN producto ON "id-mineral"="id-producto";


Consultas: 
